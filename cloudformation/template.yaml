AWSTemplateFormatVersion: '2010-09-09'

Transform: 'AWS::Serverless-2016-10-31'

Description: 'Web Scrapping Test'

Metadata: {}

Parameters: 

    Name:
        Type: String
        Default: web-scrapping

    Project:
        Type: String
        Default: web-scrapping-crawler

    Environment:
        Type: String
        Default: dev

Mappings: {}

Conditions: {}

Resources:

    #
    # Artifacts Store
    #

    ArtifactStore:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        Properties:
            BucketEncryption:
                ServerSideEncryptionConfiguration:
                  - ServerSideEncryptionByDefault:
                        SSEAlgorithm: AES256
            AccessControl: Private
            PublicAccessBlockConfiguration:
                BlockPublicAcls: True
                BlockPublicPolicy: True
                IgnorePublicAcls: True
                RestrictPublicBuckets: True
            VersioningConfiguration:
                Status: Enabled
            LifecycleConfiguration:
                Rules:
                  - Id: CleanupIncomplete
                    Status: Enabled
                    AbortIncompleteMultipartUpload:
                        DaysAfterInitiation: 10
                  - Id: CleanupCompletedVersions
                    Status: Enabled
                    NoncurrentVersionExpirationInDays: 10
                  - Id: CleanupCompleted
                    Status: Enabled
                    ExpirationInDays: 10

    ArtifactStoreParameter:
        Type: AWS::SSM::Parameter
        Properties:
            Description: 'Artifacts Store'
            Type: String
            Name: '/core/build/artifact-store'
            Value: !Ref ArtifactStore

    #
    # Managed Policies for Build
    #

    ArtifactStorePolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            Description: 'ArtifactStore Policy'
            Path: /
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - 's3:GetObject'
                      - 's3:PutObject'
                    Resource:
                      - !Sub '${ArtifactStore.Arn}/*'

    ArtifactStorePolicyParameter:
        Type: AWS::SSM::Parameter
        Properties:
            Description: 'Artifacts Store Policy Arn'
            Type: String
            Name: '/core/build/managed-policies/artifact-store'
            Value: !Ref ArtifactStorePolicy

    LogsPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            Description: 'CodePipeline Logs Policy'
            Path: /
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - 'logs:CreateLogGroup'
                      - 'logs:CreateLogStream'
                      - 'logs:PutLogEvents'
                    Resource:
                      - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*'

    LogsPolicyParameter:
        Type: AWS::SSM::Parameter
        Properties:
            Description: 'CodePipeline Logs Policy Arn'
            Type: String
            Name: '/core/build/managed-policies/logs'
            Value: !Ref LogsPolicy

    #
    # Tables
    #

    TableOutLinks:
        Type: AWS::DynamoDB::Table
        Properties:
            AttributeDefinitions:
                - AttributeName: link
                  AttributeType: S
                - AttributeName: appearences
                  AttributeType: N    
            KeySchema:
                - AttributeName: link
                  KeyType: HASH
                - AttributeName: appearences
                  KeyType: RANGE
            BillingMode: PAY_PER_REQUEST

    #
    # Functions
    #
    
    ##### Crawler ####

    # Lambda Layer
    RuntimeDependenciesLayerCrawler:
        Type: AWS::Serverless::LayerVersion
        Metadata:
            BuildMethod: makefile
        Properties:
            Description: Runtime dependencies for Lambdas
            ContentUri: ../src/crawler_job
            CompatibleRuntimes:
                - python3.7
            RetentionPolicy: Delete

    # Lambda Function
    WebScrappingCrawler:
        Type: AWS::Serverless::Function
        Properties:
            FunctionName: !Sub ${Name}-crawler
            Handler: main.lambda_handler
            Runtime: python3.7
            CodeUri: ../src/crawler_job
            Description: Web Scrapping Lambda Crawler
            Timeout: 900
            MemorySize: 3072
            Role: !Sub arn:aws:iam::${AWS::AccountId}:role/role-lambda-default
            Layers:
                - !Ref RuntimeDependenciesLayerCrawler
            Tags:
                Name: !Sub ${Name}-crawler
                Project: !Ref Project
                Environment: !Ref Environment

    ##### API ####


Outputs:

    ArtifactStoreBucket:
        Description: 'Artifacts Store Bucket'
        Value: !Ref ArtifactStore
    ArtifactStoreBucketArn:
        Description: 'Artifacts Store Bucket Arn'
        Value: !GetAtt ArtifactStore.Arn
    ArtifactStoreParameter:
        Description: 'SSM Parameter for ArtifactStore'
        Value: !Ref ArtifactStoreParameter

    ArtifactStorePolicy:
        Description: 'Artifacts Store Bucket Policy'
        Value: !Ref ArtifactStorePolicy
    ArtifactStorePolicyParameter:
        Description: 'SSM Parameter for ArtifactStorePolicy'
        Value: !Ref ArtifactStorePolicyParameter

    LogsPolicy:
        Description: 'Logs Policy'
        Value: !Ref LogsPolicy
    LogsPolicyParameter:
        Description: 'SSM Parameter for LogsPolicy'
        Value: !Ref LogsPolicyParameter